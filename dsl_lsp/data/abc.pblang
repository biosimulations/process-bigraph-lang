// imported definitions from standard library (or other files)
type float default 0.0
def exp(a): builtin

// my model
type concentration extends float default 1.0
def my_update(substrate, rate, interval): substrate + rate * interval;
unit uM_per_h: ["10e-6 mole/liter/h"]
unit uM: ["10e-6 mole/liter"]
unit conc: uM_per_h
unit hour: ["h"]
unit dimensionless: ["1"]

process_def MyProcess
    param calcium_growth: float default 0.1 [uM_per_h]
    param glucose_growth: float default 0.1 [uM_per_h]
    param dt: float default 0.1 [hour]
    param alpha: float default 0.1 [dimensionless]

    var glucose: float
    var calcium: float [conc]

    inputs glucose calcium
    outputs glucose calcium

    updates
        glucose := my_update(glucose, glucose_growth, dt);
        calcium := calcium * (1-exp(dt)) + alpha * calcium_growth * dt;

store medium
    state glucose: float default 3.0 [uM]
    state calcium: float default 0.5

store cell parent medium
    state glucose: float default 0.0
    state calcium: float default 0.0

store nucleus parent cell
    state glucose: float default 0.0
    state calcium: float default 0.0

composite_def CellComposite
    stores cell nucleus
    process p1: MyProcess stores cell
    process p2: MyProcess stores nucleus
